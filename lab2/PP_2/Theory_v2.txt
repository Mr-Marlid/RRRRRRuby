2.3) student.rb
2)Вопросы
Опишите структуру классов языка Ruby, как в нее вписывается написанный Вами класс?
Опишите принцип наследования, переопределение методов и способы вызова переопределенного метода.
Опишите принципы работы конструкторов для наследуемых классов.
Какие методы объекта обязательно есть у любого написанного Вами класса, опишите, что они делают.

3)Вопросы
Паттерн Стратегия (Strategy) представляет шаблон проектирования, который определяет набор алгоритмов, инкапсулирует каждый из них и обеспечивает их взаимозаменяемость. 
В зависимости от ситуации мы можем легко заменить один используемый алгоритм другим. 
При этом замена алгоритма происходит независимо от объекта, который использует данный алгоритм.
Когда использовать стратегию?
Когда есть несколько родственных классов, которые отличаются поведением. Можно задать один основной класс, а разные варианты поведения вынести в отдельные классы и при необходимости их применять
Когда необходимо обеспечить выбор из нескольких вариантов алгоритмов, которые можно легко менять в зависимости от условий
Когда необходимо менять поведение объектов на стадии выполнения программы
Когда класс, применяющий определенную функциональность, ничего не должен знать о ее реализации

Служит для переключения между семейством алгоритмов, когда объект меняет свое поведение, на основании изменения своего внутреннего состояния.

a. Опишите принцип инкапсуляции на примере написанных классов, объясните наличие или отсутствие геттеров и сеттеров для каждого из полей разработанных Вами классов.


b. Опишите, в каком случае необходимо использовать паттерн Шаблон. Опишите его преимущества и недостатки.(?)
Шаблонный метод (Template method). Определяет «фундамент» алгоритма и даёт наследникам возможность переопределять те или иные шаги алгоритма, оставляя его общую структуру нетронутой.
+ : 
Основная польза от использования шаблонов состоит в снижении сложности разработки за счёт готовых абстракций для решения целого класса проблем. Шаблон даёт решению своё имя, что облегчает коммуникацию между разработчиками, позволяя ссылаться на известные шаблоны.
- :
Слепое следование некоторому выбранному шаблону может привести к усложнению программы. 
У разработчика может возникнуть желание попробовать некоторый шаблон в деле без особых оснований.

c. В чем заключается принцип подстановки?
тип S будет подтипом Т тогда и только тогда, когда каждому объекту oS типа S соответствует некий объект oT типа T таким образом, что для всех программ P, реализованных в терминах T, поведение P не будет меняться, если oT заменить на oS.
Поведение наследующих классов не должно противоречить поведению, заданному базовым классом, то есть поведение наследующих классов должно быть ожидаемым для кода, использующего переменную базового типа.

d. Напишите на листочке пример рефакторинга на основании паттерна Шаблон.(?)

